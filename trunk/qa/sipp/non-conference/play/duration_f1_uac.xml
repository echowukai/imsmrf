<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- In this flow after starting normal sesssion, client sends an INFO	-->
<!-- method containing request to play some file. Client gives the	-->
<!--duration of file to be played. When server fulfills this request	-->
<!--it send back response of play request. In the response it contains	-->
<!--an attribute of play duration. This test case will check either the	-->
<!--duration returned from the media server is in given range or not	-->
<!--means it should be in duration-50 and duration+50. And depending on	-->
<!--this it will pass or fail the test!!!!				-->

<!--ASSUMPTIONS:-->
<!--  1) It is assumed that files num_invalid.wav and please_check.wav must be present at media servers--> 
<!-- 2) It is assumed that final duration should be 5000 after INFINITE repeatitions-->
<!-- 3)Duration is checked between upper limit (z=x+50) and lower limit (z=x-50) where x is the duration given in play request-->
<!-- 4) It is assumed that all time values are in milliseconds-->


<!-- FLOW NUMBER 1 for checking duration-->
<!--INVITE =======>     -->
<!--200   <========	-->
<!--ACK   ========>	-->
<!--INFO  ========>	-->
<!--200   <========	-->
<!--INFO  <========	-->
<!--200   ========>	-->
<!--BYE   ========>	-->
<!--200   <========	-->

<scenario name="duration UAC">
	<nop display="Duration Check"/>
	<!-- Client Sending INVITE -->
<send retrans="500">
    <![CDATA[

      INVITE sip:ms@mediaserver.com:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:ms@mediaserver.com:mediaserver.com>
      Call-ID: [call_id]
      CSeq: 1 INVITE
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Performance Test
      Content-Type: application/sdp
      Content-Length: [len]

v=0
o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
s=-
c=IN IP[media_ip_type] [media_ip]
t=0 0
m=audio [media_port+2] RTP/AVP 0
a=rtpmap:0 PCMU/8000
]]>
  </send>
  <!--Response receiving -->
  <recv response="200" >
  </recv>
  <!--######################-->
  <!-- Sending Ack -->
  <send>
    <![CDATA[
      ACK sip:ms@mediaserver.com:mediaserver.com SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:ms@mediaserver.com:mediaserver.com>[peer_tag_param]
      Call-ID: [call_id]
      CSeq: 1 ACK
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Performance Test
      Content-Length: 0
      ]]>
  </send>
  <!-- INFO method containing MSCML -->
  <send retrans="500">
    <![CDATA[

      INFO sip:ms@192.168.0.111 SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[pid]SIPpTag00[call_number]
      To: sut <sip:ms@192.168.0.111>
      Call-ID: [call_id]
      CSeq: 1 INFO
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Performance Test
      Content-Type: application/mediaservercontrol+xml
      Content-Length: [len]
      <?xml version="1.0" encoding="UTF-8" ?>

      <MediaServerControl version="1.0">
      <request>
      <play id="3">
      <prompt duration="50000" repeat="INFINITE">
      <audio url="num_invalid.wav"/>
      <audio url="please_check.wav"/>
      </prompt>
      </play>
      </request>
      </MediaServerControl>

    ]]>
  </send>
  <!-- 200 ok for INFO method     -->
  <recv response="200">
  </recv>
  <!-- Receiving Info request containing response of MSCML -->
  <recv request="INFO">
	  <action>
		  <exec command="sh true"/>
		  <!-- Regular Expression for checking Request attribute:::variable 8 contains request attribute value -->
		  <ereg regexp="request=\"([A-Z,a-z]*)\"" search_in="msg" check_it="true" assign_to="8"/>
		  <log message="[$8]"/>
		  <!-- Regular Expression for checking Text attribute:::variable 9 contains text attribute value -->
		  <ereg regexp="text=\"([A-Z,a-z]*)\"" search_in="msg" check_it="true" assign_to="9"/>
		  <log message="[$9]"/>
		  <!-- Regular Expression for checking Code attribute :::variable 1 contains code value -->
		  <ereg regexp="code=\"([2,4,5])([0-9]{2})\"" search_in="msg" check_it="true" assign_to="1,2,3"/>
		  <todouble assign_to="1" variable="2" />
		  <!-- variable 3 cintains TRUE for Error on Media Server -->
		  <test assign_to="3" variable="1" compare="equal" value="5" />
		  <!-- variable 4 contains TRUE for success -->
		  <test assign_to="4" variable="1" compare="equal" value="2" />
		  <!-- variable 5 contains TRUE for client error -->
		  <test assign_to="5" variable="1" compare="equal" value="4" />
		  <!-- Regular Expression for checking Play Duration:::variable 6 contains playduration value -->
		  <ereg regexp="playduration=\"([0-9]*)\"" search_in="msg" check_it="true" assign_to="6,7"/>
		  <!-- Regular Expression for checking Playoffset:::variable 10 contains playoffset value -->
		  <ereg regexp="playoffset=\"([0-9]*)\"" search_in="msg" check_it="true" assign_to="10"/>
	 </action>
  </recv>
  <!-- Sending 200 ok for INFO received containing MSCML response -->
  <!-- after this it will test variable 3 and jump to Label for error on media server    -->
  <send next="1" test="3">
   <![CDATA[
      SIP/2.0 200 OK
      [last_Via:]
      [last_From:]
      [last_To:];tag=[pid]SIPpTag01[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Type: application/mscml
      Content-Length: [len]
      <?xml version="1.0" encoding="UTF-8" ?>

      <MediaServerControl version="1.0">
      <response id="3" request="play" code="258" text="abc" reason="duration finished" playduration="4950" playoffset="3">
      <error_info code="123" text="abc" context="asd"/>
      </response>
      </MediaServerControl>
    ]]>
  </send>
  <!--checks variable 5 and jump to client error case-->
  <nop next="2" test="5">
</nop>
<!--checks variable 4 and jump to code for success case-->
  <nop next="3" test="4">
</nop>
<!-- For Invalid code-->
<nop next="6">
	<action>
		<log message="All three variables are false!!!!!!!! PROBLEM"/>
	</action>
</nop>
<!--  Error on Media Server     -->
  <label id="1"/>
  <nop next="6" >
	  <action>
		  <log message="           Error on Media Server!!!"/>
	 </action>
</nop>
<!-- Error on client side -->
<label id="2"/>
<nop next="6">
	<action>
		<log message="              Client Error!!!"/>
	</action>
</nop>
<!-- success according to code -->
<label id="3"/>
<nop>
	<action>
		<todouble assign_to="7" variable="7" />
		<!--compares variable 7(playduration) with duration-->
		<!--upper limit of duration(z=x+50) where x is the  duration in play request-->
		<!-- Here value of x is supposed to be 5000, so 5000+50=5050-->
		<test assign_to="6" variable="7" compare="less_than_equal" value="5050" />
		<assignstr assign_to="13" value="PASS" />
		<assignstr assign_to="14" value="FAIL" />
	</action>
</nop>
<!-- moves to label 4 if variable 6 sets -->
<nop next="4" test="6">
	<action>
		<!--compares variable 7(playduration) with duration-->
		<!--lower limit of duration(y=x-50) where x is the duration in play request-->
		<!-- Here value of x is supposed to be 5000, so 5000-50=4950-->
		<test assign_to="11" variable="7" compare="greater_than_equal" value="4950" />
	</action>
</nop>
<!--if playduration doesn't match-->
<nop next="6">
	<action>
		<log message="              Test is [$14] because play duration is more than limit"/>
	</action>
</nop>
<!-- if duration matches the criteria-->
<label id="4"/>
<nop next="7" test="11">
</nop>
<nop next="6">
	<action>
		<log message="             Test is [$14] because play duration is less than limit"/>
	</action>
</nop>
<label id="7"/>
<nop next="6">
	<action>
		<log message="[$10]"/>
	<log message="              Test is [$13] according to duration"/>
	</action>
</nop>

  <!-- SENDING BYE -->
<label id="6"/>
  <send>
    <![CDATA[
      BYE sip:ms@mediaserver.com:mediaserver.com SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:ms@mediaserver.com:mediaserver.com>[peer_tag_param]
      Call-ID: [call_id]
      CSeq: 2 BYE
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Performance Test
      Content-Length: 0
    ]]>
   </send>
  <!-- receiving 200 ok -->
  <recv response="200">
  </recv>
  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>
  
