<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- In this flow after starting normal session, client sends an INFO method containing 
     request to play and record some file. When an escape key is sent to media server 
     while it is playing, it terminates the request and sends back response of 
     playrecord request.Shell scripts Generate_Results_for_Play.sh verifies the results
     and writes it to results.txt file
-->

<!-- FLOW -->
<!--INVITE =======>     -->
<!--200   <========	-->
<!--ACK   ========>	-->
<!--INFO  ========>	-->
<!--200   <========	-->
<!--INFO  <========	-->
<!--200   ========>	-->
<!--BYE   ========>	-->
<!--200   <========	-->

<scenario name="PlayRecord UAC">
  <nop display="PlayRecord Check"/>

  <!-- Client Sending INVITE -->
  <send retrans="500">
    <![CDATA[
      INVITE sip:ms@mediaserver.com:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:[service]@[remote_ip]:[remote_port]>
      Call-ID: [call_id]
      CSeq: 1 INVITE
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Performance Test
      Content-Type: application/sdp
      Content-Length: [len]

      v=0
      o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
      s=-
      c=IN IP[media_ip_type] [media_ip]
      t=0 0
      m=audio [media_port-40] RTP/AVP 0 101
      a=rtpmap:0 PCMU/8000
      a=rtpmap:101 telephone-event/8000
      a=fmtp:101 0-15
    ]]>
  </send>

  <!--Response receiving -->
  <recv response="100" optional="true">
  </recv>

  <!--Response receiving -->
  <recv response="200" >
    <action>
      <ereg regexp="m=([A-Z,a-z]*) ([0-9]*)" search_in="msg" check_it="true" assign_to="1,2,3"/>
      <log message="dtmf_port = [$3]"/>
      <assignstr assign_to="dtmf_port" value="[$3]"/>
      <exec command="echo -e   ================================================================================================================================= >> results.txt"/>
      
    </action>
  </recv>

  
  <nop>
	  <action>
		  
		  <assignstr assign_to="filename" value="testing[call_id].wav" />
		  <log message="filename  is [$filename]"/> 
		  
		  <assignstr assign_to="portvalue" value="[media_port-40]" />
		  <log message="port value  is [$portvalue]"/>
		  
		  <!-- Start receiving media stream -->
		  <exec command="./gst-receiver-start.sh [$portvalue] [$filename]"/>
		  
		  <!-- Pause Current SIPP Instance -->
		 <exec int_cmd="pause_call" />
		 
	  </action>
  </nop>
  
  <!-- Sending Ack -->
 <pause milliseconds="5000"/>
  <!-- Sending Ack -->
  <send>
    <![CDATA[
      ACK sip:ms@mediaserver.com:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:[service]@[remote_ip]:[remote_port]>[peer_tag_param]
      Call-ID: [call_id]
      CSeq: 1 ACK
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Performance Test
      Content-Length: 0
    ]]>
  </send>

  <nop>
	  <action>
		  		  
		  <assignstr assign_to="testname" value="PlayRecord" />
		  <log message="testname  is [$testname]"/> 
		  <assignstr assign_to="promptvalue" value="[field2]" />
		  <log message="prompt value  is [$promptvalue]"/> 
		  <assignstr assign_to="basevalue" value="[field0]" />
		  <log message="base value  is [$basevalue]"/> 
		  
		  <assignstr assign_to="audiovalue" value="[field1]" />
	    	  <log message="audio value  is [$audiovalue]"/> 
		  <assignstr assign_to="recordvalue" value="[field3]" />
	    	  <log message="record value  is [$recordvalue]"/> 
		  <assignstr assign_to="recordfile" value="[field4]" />
	    	  <log message="record file  is [$recordfile]"/> 
		  <assignstr assign_to="fileduration" value="[field8]" />
		  <log message="fileduration  is [$fileduration]"/>
		  <assignstr assign_to="8" value="[field6]" />
		  
		  
		  
		  <log message="playdur  is [$8]"/>
		  
		  <exec command="echo -e Testname            :[$testname] Call_ID             :[call_id]>> results.txt"/>
		  
		  
	  </action>
</nop>

<nop>
	<action>
		
		<exec command="echo -e ================================================================================================================================= >> results.txt"/>
		
	
</action>
</nop>
  <!-- INFO method containing MSCML -->
  <send retrans="500">
    <![CDATA[
      INFO sip:ms@mediaserver.com SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[pid]SIPpTag00[call_number]
      To: sut <sip:[service]@[remote_ip]:[remote_port]>
      Call-ID: [call_id]
      CSeq: 1 INFO
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Performance Test
      Content-Type: application/mediaservercontrol+xml
      Content-Length: [len]

      <?xml version="1.0"?>
      <MediaServerControl version="1.0">
	<request>
	<playrecord id="1234" [$recordvalue] >	
	<prompt [$basevalue] [$promptvalue]  >
	[$audiovalue]	
	</prompt>
	</playrecord>
	</request>
</MediaServerControl>]]>
  </send>

  <!-- 200 ok for INFO method -->
  


<recv response="200">
</recv>

<nop>
	<action>
		<gettimeofday assign_to="seconds1,microseconds1" />
		<todouble assign_to="milliseconds1" variable="microseconds1" />
		<divide assign_to="milliseconds1" value="1000" />		
	</action>
</nop>

<pause milliseconds="0"/>

<nop>
    <action>
      
      <!-- Call Dtmf Utility to send Dtmf Digits -->
      <assignstr assign_to="dtmf_digits" value="*" />
      <assignstr assign_to="first_delay" value="1" />
      <assignstr assign_to="next_delay" value="0" />
      <exec command="./../../dtmfsend.sh [remote_ip] [$dtmf_port] \"[$dtmf_digits]\" [$first_delay] [$next_delay]" />
      <!-- Pause Current SIPP Instance -->
      <!--exec command="./gst-receiver-stop.sh"/-->      		
      <exec int_cmd="pause_call"/>

      <gettimeofday assign_to="seconds2,microseconds2" />
      
      <!-- Get the Time when play ends -->
      <exec command="./gst-stop.sh"/>
      <exec int_cmd="pause_call"/>
      
	  
      
           
      <todouble assign_to="milliseconds2" variable="microseconds2" />
      <divide assign_to="milliseconds2" value="1000" /> 


           
      <!-- Calculate Time Difference to calculate play duration-->
      
	  <subtract assign_to="seconds2" variable="seconds1" />
      <subtract assign_to="milliseconds2" variable="milliseconds1" />
      <multiply assign_to="seconds2" value="1000" />
      <add assign_to="milliseconds2" variable="seconds2" />
      
      <log message="playduration = [$milliseconds2] milliseconds" />
      <assignstr assign_to="playdur1" value="[$milliseconds2]" />
    </action>
</nop>
  <!-- Receiving Info request containing response of MSCML -->
  <recv request="INFO">
    <action>     
      <!-- Regular Expression for checking Id attribute:::variable 10 contains request attribute value -->
      <ereg regexp="id=\"([0-9]*)\"" search_in="msg" check_it="true" assign_to="10,11"/>
      <log message="[$10]"/>
      <log message="[$11]"/>

      <!-- Regular Expression for checking Request attribute:::variable 8 contains request attribute value -->
      <ereg regexp="request=\"([A-Z,a-z]*)\"" search_in="msg" check_it="true" assign_to="8"/>
      <log message="[$8]"/>

      <!-- Regular Expression for checking Text attribute:::variable 9 contains text attribute value -->
      <!--ereg regexp="text=\"([A-Z,a-z]*)([A-Z,a-z]*)\"" search_in="msg" check_it="true" assign_to="9"/>
      <log message="[$9]"/-->
     <ereg regexp="code=\"([2,4,5])([0-9]{2})\"" search_in="msg" check_it="true" assign_to="1,2,3"/>
     <todouble assign_to="1" variable="2" />
	    <!-- variable 3 cintains TRUE for Error on Media Server -->
     <log message="variable 1 is  [$1]"/>
	      
     <test assign_to="3" variable="1" compare="equal" value="5" />
	      <!-- variable 4 contains TRUE for success -->
     <test assign_to="4" variable="1" compare="equal" value="2" />
	      <!-- variable 5 contains TRUE for client error -->
     <test assign_to="5" variable="1" compare="equal" value="4" />

      <!-- Regular Expression for checking Code attribute:::variable 1 contains code value -->
      
      
      <ereg regexp="playduration=\"([0-9]*)([a-z]*)\"" search_in="msg" check_it="true" assign_to="6,7"/>
       <assignstr assign_to="durresponse" value="[$7]" />
		<log message="durresponse = [$durresponse] milliseconds" />

      <log message="[$6]"/>
      <!-- variable 3 cintains TRUE for Error on Media Server -->
      <ereg regexp="playoffset=\"([0-9]*)\"" search_in="msg" check_it="true" assign_to="10,52"/>


      
      <!-- Regular Expression for checking digits collected:::variable 7 contains digits value -->
      <!--ereg regexp="digits=\"([0-9]*)\"" search_in="msg" check_it="true" assign_to="9,10"/-->
      <!--log message="[$6]"/-->
    </action>
  </recv>

  <!-- Sending 200 ok for INFO received containing MSCML response -->
  <!-- after this it will test variable 3 and jump to Label for error on media server    -->
  <send next="1" test="3">
   <![CDATA[
      SIP/2.0 200 OK
      [last_Via:]
      [last_From:]
      [last_To:];tag=[pid]SIPpTag01[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Type: application/mscml
      Content-Length: [len]
      ]]>
</send>


  
  <!--checks variable 5 and jump to client error case-->
  <nop next="2" test="5">
  </nop>

  <!--checks variable 4 and jump to code for success case-->
  <nop next="3" test="4">
  </nop>

  <!-- For Invalid code-->
  <nop next="8">
    <action>
      <log message="All three variables are false!!!!!!!! PROBLEM"/>
    </action>
  </nop>

  <!--  Error on Media Server -->
  <label id="1"/>
  <nop next="8" >
    <action>
      <log message="Error on Media Server!!!"/>
    </action>
  </nop>

  <!-- Error on client side -->
  <label id="2"/>
  <nop next="8">
    <action>
      <log message="Client Error!!!"/>
    </action>
  </nop>

  <!-- success according to code -->
  <label id="3"/>
  <nop>
    <action>
	<log message="7 is [$7]"/>
	    <exec command="./Generate_Results_for_Play.sh '[$durresponse]' '[$playdur1]' '[$52]' '[$playdur1]' '[$filename]'"/>
	    <exec int_cmd="pause_call" />

    </action>
  </nop>


  <!-- SENDING BYE -->
  <label id="8"/>
  <send>
    <![CDATA[
      BYE sip:ms@mediaserver.com:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:[service]@[remote_ip]:[remote_port]>[peer_tag_param]
      Call-ID: [call_id]
      CSeq: 2 BYE
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Performance Test
      Content-Length: 0
    ]]>
  </send>

  <!-- receiving 200 ok -->
  <recv response="200">
  </recv>

  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>
