<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- In this flow after starting normal session, client sends an INFO method	-->
<!-- containing request to start collecting digits. When server fulfills this	-->
<!-- request it sends back response of playcollect request. In the response, it	-->
<!-- contains an attribute of digit.This test case will check the digits	-->
<!-- returned from the media server and log in the file about Pass and Fail of	-->
<!-- the test according to id of request.					-->

<!-- FLOW NUMBER 4 for checking id -->
<!--INVITE =======>     -->
<!--100   <========	-->
<!--200   <========	-->
<!--ACK   ========>	-->
<!--INFO  ========>	-->
<!--200   <========	-->
<!--INFO  <========	-->
<!--200   ========>	-->
<!--BYE   ========>	-->
<!--200   <========	-->

<scenario name="id_f4_uac">
  <nop display="ID Check">
    <action>
      <log message="<==ID Test==>" />
    </action>
  </nop>

  <send retrans="500">
    <![CDATA[
      INVITE sip:ms@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:ms@[remote_ip]:[remote_port]>
      Call-ID: [call_id]
      CSeq: 1 INVITE
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Play Collect Test
      Content-Type: application/sdp
      Content-Length: [len]

      v=0
      o=user1 53655765 2353687637 IN IP[local_ip_type] [local_ip]
      s=-
      c=IN IP[media_ip_type] [media_ip]
      t=0 0
      m=audio [media_port+2] RTP/AVP 0 101
      a=rtpmap:0 PCMU/8000
      a=rtpmap:101 telephone-event/8000
      a=fmtp:101 0-15
    ]]>
  </send>

  <recv response="100" optional="true">
  </recv>

  <recv response="200" >
  </recv>

  <send>
    <![CDATA[
      ACK sip:ms@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:ms@[remote_ip]:[remote_port]>[peer_tag_param]
      Call-ID: [call_id]
      CSeq: 1 ACK
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Play Collect Test
      Content-Length: 0
    ]]>
  </send>

  <!-- Sending MSCML <playcollect> Request -->
  <send retrans="500">
    <![CDATA[
      INFO sip:ms@192.168.0.111 SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[pid]SIPpTag00[call_number]
      To: sut <sip:ms@192.168.0.111>
      Call-ID: [call_id]
      CSeq: 1 INFO
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Play Collect Test
      Content-Type: application/mediaservercontrol+xml
      Content-Length: [len]

      <?xml version="1.0"?>
      <MediaServerControl version="1.0">
        <request>
          <playcollect maxdigits="6"/>
        </request>
      </MediaServerControl>
    ]]>
  </send>

  <recv response="200">
  </recv>


  <recv request="INFO">
    <action>
      <!-- Regular Expression for Checking Id Attribute -->
      <ereg regexp="id=\"([0-9A-Za-z_]*)\"" search_in="msg" check_it="false" assign_to="1"/>
      <log message="[$1]"/>

      <!-- Regular Expression for Checking Request Attribute -->
      <ereg regexp="request=\"([A-Za-z]*)\"" search_in="msg" check_it="true" assign_to="3,4"/>
      <log message="[$3]"/>

      <!-- Comparing Request -->
      <strcmp assign_to="17" variable="4" value="playcollect" />
		<assignstr assign_to="Requestname" value="[$4]" />
      <!-- Regular Expression for Checking Text Attribute -->
      <ereg regexp=" text=\"([ A-Za-z_]*)\"" search_in="msg" check_it="true" assign_to="5"/>
      <log message="[$5]"/>

      <!-- Regular Expression for Checking Reason Attribute -->
      <ereg regexp="reason=\"([A-Za-z]*)\"" search_in="msg" check_it="true" assign_to="6,7"/>

      <!-- Comparing Reason -->
      <strcmp assign_to="18" variable="7" value="timeout" />
		<assignstr assign_to="Reason" value="[$7]" />
      <!-- Regular Expression for Checking Name Attribute -->
      <ereg regexp="name=\"([A-Za-z])\"" search_in="msg" check_it="false" assign_to="19"/>

      <!-- Regular Expression for Checking Code Attribute -->
      <ereg regexp="code=\"([245])([0-9]{2})\"" search_in="msg" check_it="true" assign_to="8,9,10"/>
      <log message="[$8]"/>
      <todouble assign_to="6" variable="9" />

      <!-- Testing 5xx Code for Error on Media Server -->
      <test assign_to="10" variable="6" compare="equal" value="5" />

      <!-- Checking 2xx Code for Success -->
      <test assign_to="11" variable="6" compare="equal" value="2" />

      <!-- Checking 4xx Code for Client Error -->
      <test assign_to="12" variable="6" compare="equal" value="4" />

      <!-- Regular Expression for Checking Digits Collected -->
      <ereg regexp="digits=\"([0-9A-Da-d*#]*)\"" search_in="msg" check_it="true" assign_to="13,14"/>
      <log message="[$13]"/>
		<assignstr assign_to="Digits" value="[$14]" />
      <!-- Comparing Dtmf Digits -->
      <strcmp assign_to="2" variable="14" value="" />
    </action>
  </recv>

  <!-- Test Variable 10 for Error on Media Server -->
  <send next="1" test="10">
   <![CDATA[
      SIP/2.0 200 OK
      [last_Via:]
      [last_From:]
      [last_To:];tag=[pid]SIPpTag01[call_number]
      [last_Call-ID:]
      [last_CSeq:]
      Contact: <sip:[local_ip]:[local_port];transport=[transport]>
      Content-Type: application/mediaservercontrol+xml
      Content-Length: 0
    ]]>
  </send>

					
  <nop>
	  <action>
		  <exec command="echo -e ================================================================================================================================= >> results.txt"/>
	  </action>
</nop>
  <pause milliseconds="1000"/>
  <nop>
	  <action>
		  
		  <assignstr assign_to="testvariables" value="Request,Digits,Responsetime" />
		  <log message="testname  is [$testvariables]"/> 
		  
		  <exec command="echo -e Test Variables       :[$testvariables] Call_ID             :[call_id]>> results.txt"/>
		  
	  </action>
  </nop>
  
  <pause milliseconds="1000"/>
  
  
  <nop>
	  <action>
		  <exec command="echo -e ================================================================================================================================= >> results.txt"/>
	  </action>
</nop> 
  <!--Checks Variable 12 for Client Error -->
  <nop next="2" test="12">
  </nop>

  <!--Checks Variable 11 for Success Code Value-->
  <nop next="3" test="11">
  </nop>

  <!-- Invalid Code Value Found -->
  <nop next="5">
    <action>
      <log message="All three variables are false!!!!!!!! PROBLEM"/>
    </action>
  </nop>

  <!--  Error on Media Server -->
  <label id="1"/>
  <nop next="5" >
    <action>
      <log message="Error on Media Server!!!"/>
    </action>
  </nop>

  <!-- Error on Client Side -->
  <label id="2"/>
  <nop next="5">
    <action>
      <log message="Client Error!!!"/>
    </action>
  </nop>

  <!-- Test Variable 1 for Id and Jump if Error -->
  <label id="3"/>
  <nop next="5" test="1">
  </nop>

  <!-- Test Variable 17 for Request and Jump if Error -->
  <label id="4"/>
  <nop next="5" test="17">
		<action>
		  <log message="17 is [$17]"/>
		  <assignstr assign_to="attribute" value="Request" />
		  <assignstr assign_to="expected" value="playcollect" />
		  <assignstr assign_to="actual" value="[$Requestname]" />
  </action>
  </nop>

<nop>
	  <action>
		  
		  <exec command="./Generate_Results_for_PlayCollect.sh Request playcollect [$Requestname] PASS Match"/>
		  <exec int_cmd="pause_call" />
	</action>
  </nop>

  <!-- Test Variable 18 for Reason and Jump if Error -->
  <nop next="5" test="18">
		<action>
		  <log message="18 is [$18]"/>
		  <assignstr assign_to="attribute" value="Reason" />
		  <assignstr assign_to="expected" value="timeout" />
		  <assignstr assign_to="actual" value="[$Reason]" />
  	</action>
  </nop>

<nop>
	  <action>
		 
		  <exec command="./Generate_Results_for_PlayCollect.sh Reason timeout [$Reason] PASS Match"/>
		  <exec int_cmd="pause_call" />
	  </action>
  </nop>

  <!-- Test Variable 19 for Name and Jump if Error -->
  <nop next="6" test="19">
  </nop>

  <!-- Test Variable 2 for Dtmf Digits and Jump if Error -->
  <nop next="5" test="2">
		<action>
		  <assignstr assign_to="attribute" value="Digits" />
	  	<assignstr assign_to="expected" value="none" />
		<assignstr assign_to="actual" value="[$Digits]" />
	  </action>
  </nop>

 <nop>
	  <action>		 	  
		  <exec command="./Generate_Results_for_PlayCollect.sh Digits none none PASS Match"/>
		  <exec int_cmd="pause_call" />
	  </action>
  </nop>
  
  <nop next="6">
  </nop>

  <!-- At Least One Test has Failed -->
  <label id="5"/>
  <nop next="7">
    <action>
      <log message="Test is Failed"/>
		<exec command="./Generate_Results_for_PlayCollect.sh [$attribute] [$expected] [$actual] FAIL Mismatch"/>
      <exec int_cmd="pause_call" />
    </action>
  </nop>

  <!-- All Tests Successful -->
  <label id="6"/>
  <nop next="7">
    <action>
      <log message="Test is Passed"/>
    </action>
  </nop>

  <label id="7"/>
  <send>
    <![CDATA[
      BYE sip:ms@[remote_ip]:[remote_port] SIP/2.0
      Via: SIP/2.0/[transport] [local_ip]:[local_port];branch=[branch]
      From: sipp <sip:sipp@[local_ip]:[local_port]>;tag=[call_number]
      To: sut <sip:ms@[remote_ip]:[remote_port]>[peer_tag_param]
      Call-ID: [call_id]
      CSeq: 2 BYE
      Contact: sip:sipp@[local_ip]:[local_port]
      Max-Forwards: 70
      Subject: Play Collect Test
      Content-Length: 0
    ]]>
  </send>

  <recv response="200">
  </recv>

  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>
